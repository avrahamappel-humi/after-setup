#!/bin/bash

BASE_PATH="$HOME/humility/applications"

ANGULAR_PROJECTS=(ui)
LARAVEL_PROJECTS=(hr admin)
RAILS_PROJECTS=(payroll)

# MacOS doesn't include realpath, until Ventura
here=$(dirname "$(readlink -f "$0" )")

# Add githooks
function setup_githooks {
    p="$1"
    if ! test -d "$p/.git"
    then
        return
    fi

    ln -s -f "$here/prepare-commit-msg" "$p/.git/hooks/prepare-commit-msg"
}

# Add Nix shells
function setup_nix {
    p="$1"
    shell="$here/shells/$(basename "$p").nix"

    if test -f "$shell"
    then
        echo "Installing nix shell in $p"

        # Symbolic link so we can continue editing
        rm -f "$p/shell.nix"
        ln -s -f "$shell" "$p/shell.nix"
        echo shell.nix >> "$p/.git/info/exclude"
    fi

    # Sometimes there already is a shell.nix in the repo
    if test -n "$(find "$p" -maxdepth 1 -name '*.nix' -print -quit)"
    then
        echo "Setting up direnv to use the nix shell"

        if test -f flake.nix
        then
            echo use flake > "$p/.envrc"
        else
            echo use nix > "$p/.envrc"
        fi
    fi
}

# Set up Laravel projects
for project in "${LARAVEL_PROJECTS[@]}"
do
    p="$BASE_PATH/$project"

    echo "Setting up Laravel project in $p"

    setup_githooks "$p"
    setup_nix "$p"
    echo layout php >> "$p/.envrc"
    direnv allow "$p" 

    cd "$p" || return
    direnv exec "$p" "$here/bash/laravel.bash"
done

# Set up Angular projects
for project in "${ANGULAR_PROJECTS[@]}"
do
    p="$BASE_PATH/$project"

    echo "Setting up Angular project in $p"

    setup_githooks "$p"
    setup_nix "$p"
    echo layout node >> "$p/.envrc"
    direnv allow "$p" 

    cd "$p" || return
    direnv exec "$p" "$here/bash/angular.bash"
done

for project in "${RAILS_PROJECTS[@]}"
do
    p="$BASE_PATH/$project"

    echo "Setting up Rails project in $p"

    setup_githooks "$p"
    setup_nix "$p"
    direnv allow "$p" 

    cd "$p" || return
    direnv exec "$p" "$here/bash/rails.bash"
done

echo "Setup complete!"
